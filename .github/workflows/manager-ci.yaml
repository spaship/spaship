name: SPAship Manager Build and Push to Quay

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
    paths:
      - '/packages/manager/**'
  workflow_dispatch:
    inputs:
      env:
        description: Select envirinment
        options:
          - Dev
          - Qa
          - Stage
          - Prod
        required: true
        type: choice
jobs:
  push_to_registry:
    name: Push Docker image to Registries
    env:
      IMAGE_NAME: "manager"
      REGISTRY_NAMESPACE: "spaship"
    runs-on: ubuntu-latest
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Login to Quay.io
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.CI_QUAY_USERNAME }}
          password: ${{ secrets.CI_QUAY_TOKEN }}

      - name: Dev Build and push into repository
        if: github.event.inputs.env == 'Dev'
        id: docker_build_dev
        uses: docker/build-push-action@v2
        with:
          context: ./packages/manager
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            NEXT_PUBLIC_SPASHIP_API_BASE_URL=${{ secrets.DEV_API_URL }}
          tags: |
            quay.io/${{ env.REGISTRY_NAMESPACE }}/${{ env.IMAGE_NAME }}:dev-${{env.GITHUB_REF_SLUG}}
      - name: Image digest
        run: echo ${{ steps.docker_build_dev.outputs.digest }}


      - name: Qa Build and push into repository
        if: github.event.inputs.env == 'Qa'
        id: docker_build_qa
        uses: docker/build-push-action@v2
        with:
          context: ./packages/manager
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            NEXT_PUBLIC_SPASHIP_API_BASE_URL=${{ secrets.QA_API_URL }}
          tags: |
            quay.io/${{ env.REGISTRY_NAMESPACE }}/${{ env.IMAGE_NAME }}:qa-${{env.GITHUB_REF_SLUG}}
      - name: Image digest
        run: echo ${{ steps.docker_build_qa.outputs.digest }}


      - name: Stage Build and push into repository
        if: github.event.inputs.env == 'Stage'
        id: docker_build_stage
        uses: docker/build-push-action@v2
        with:
          context: ./packages/manager
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            NEXT_PUBLIC_SPASHIP_API_BASE_URL=${{ secrets.STAGE_API_URL }}
          tags: |
            quay.io/${{ env.REGISTRY_NAMESPACE }}/${{ env.IMAGE_NAME }}:stage-${{env.GITHUB_REF_SLUG}}
      - name: Image digest
        run: echo ${{ steps.docker_build_stage.outputs.digest }}


      - name: Prod Build and push into repository
        if: github.event.inputs.env == 'Prod'
        id: docker_build_prod
        uses: docker/build-push-action@v2
        with:
          context: ./packages/manager
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            NEXT_PUBLIC_SPASHIP_API_BASE_URL=${{ secrets.PROD_API_URL }}
          tags: |
            quay.io/${{ env.REGISTRY_NAMESPACE }}/${{ env.IMAGE_NAME }}:prod-${{env.GITHUB_REF_SLUG}}
      - name: Image digest
        run: echo ${{ steps.docker_build_prod.outputs.digest }}
