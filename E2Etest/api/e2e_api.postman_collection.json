{
  "info": {
    "_postman_id": "633f5094-71ed-4060-890b-469b7b51e01c",
    "name": "SPAship",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "apiKey_add",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "a53e2928-8dd6-4e11-a1be-4311a083cb0a",
            "exec": [
              "var moment = require('moment')",
              "var datestamp = moment().add(2,'day').format(\"YYYY-MM-DD\")",
              "console.log(datestamp)",
              "postman.setGlobalVariable(\"expiredate\",datestamp);",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "1596e590-8c85-44f8-b993-0d7297dac8c4",
            "exec": [
              "var jsonData = pm.response.json();",
              "pm.test(\"create apikey as \" + pm.variables.get(\"label\")+\" of \"+ pm.variables.get(\"api_key\"), function () {",
              "  pm.expect(pm.response.code).equal(201);",
              "});",
              "pm.test(\"check the response body\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.status).to.eql('success')",
              "    pm.expect(jsonData.data.label).to.eql(pm.variables.get(\"label\"))",
              "    pm.expect(jsonData.data.expiredDate).to.eql(pm.variables.get(\"expiredate\"))",
              "    pm.expect(pm.response.text()).to.include(\"createdAt\");",
              "    pm.expect(pm.response.text()).to.include(\"key\");",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"label\": \"{{label}}\",\n\t\"expiredDate\":\"{{expiredate}}\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{host}}/api/v1/apiKeys",
          "host": ["{{host}}"],
          "path": ["api", "v1", "apiKeys"]
        }
      },
      "response": []
    },
    {
      "name": "apiKey_list",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "067bd7ba-65f0-4c03-bcdc-0d10b1d1f1b2",
            "exec": [
              "pm.test(\"get the apikey\" , function () {",
              "  pm.expect(pm.response.code).equal(200);",
              "  ",
              "});",
              "",
              "pm.test(\"check the response body\"+ \" \" + pm.variables.get(\"label\"), function () {",
              "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"label\"));",
              "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"expiredate\"));",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.status).to.eql('success')",
              "    pm.expect(pm.response.text()).to.include(\"createdAt\");",
              "    pm.expect(pm.response.text()).to.include(\"shortKey\");",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{host}}/api/v1/apiKeys",
          "host": ["{{host}}"],
          "path": ["api", "v1", "apiKeys"]
        }
      },
      "response": []
    },
    {
      "name": "apiKey_delete",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "651693ea-30b8-4c94-bad5-55c738d6bd93",
            "exec": [
              "",
              "pm.test(\"delete apikey of \" + pm.globals.get('label') + \" \" + pm.globals.get(\"api_key\"), function () {",
              "  pm.expect(pm.response.code).equal(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{host}}/api/v1/apiKeys/{{label}}",
          "host": ["{{host}}"],
          "path": ["api", "v1", "apiKeys", "{{label}}"]
        }
      },
      "response": []
    },
    {
      "name": "application_deploy",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "65f80dd9-4b48-4df5-962d-b7917adbb869",
            "exec": [
              "pm.test('/deploy is tested with app name of test_' + pm.globals.get(\"timestamp\"), function() {",
              "    pm.expect(pm.response.code).equal(201);",
              "});",
              "",
              "pm.test(\"body value check\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data.name).to.eql(\"test_\"+pm.variables.get(\"timestamp\"));",
              "    pm.expect(jsonData.data.path).to.eql(\"/test/\"+pm.variables.get(\"timestamp\"));",
              "    pm.expect(jsonData.data.ref).to.eql(\"v1.0_\"+pm.variables.get(\"timestamp\"));",
              "    //pm.expect(pm.response.text()).to.include(\"timestamp\");",
              "    ",
              "    ",
              "    ",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "959d3566-12a9-4fe1-8df8-d87377eb33c5",
            "exec": [
              "var timestamp = Math.round(new Date()/1000)",
              "postman.setGlobalVariable(\"timestamp\",timestamp);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "name",
              "value": "test_{{$timestamp}}",
              "type": "text"
            },
            {
              "key": "path",
              "value": "/test/{{$timestamp}}",
              "type": "text"
            },
            {
              "key": "ref",
              "value": "v1.0_{{$timestamp}}",
              "type": "text"
            },
            {
              "key": "upload",
              "type": "file",
              "src": "test.tar"
            }
          ]
        },
        "url": {
          "raw": "{{host}}/api/v1/applications/deploy",
          "host": ["{{host}}"],
          "path": ["api", "v1", "applications", "deploy"]
        }
      },
      "response": []
    },
    {
      "name": "application_list",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "27fc89db-e799-4fa3-ba38-0269dbfd267b",
            "exec": [
              "pm.test(\"/list is tested with app name of test_\" + pm.globals.get(\"timestamp\"), function () {",
              "  pm.expect(pm.response.code).equal(200);",
              "});",
              "",
              "pm.test(\"body value check\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(pm.response.text()).to.include(\"test_\"+pm.variables.get(\"timestamp\"));",
              "    pm.expect(pm.response.text()).to.include(\"/test/\"+pm.variables.get(\"timestamp\"));",
              "    pm.expect(pm.response.text()).to.include(\"v1.0_\"+pm.variables.get(\"timestamp\"));",
              "    pm.expect(pm.response.text()).to.include(\"timestamp\");",
              "    ",
              "    ",
              "    ",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "key",
              "value": "",
              "type": "string"
            },
            {
              "key": "value",
              "value": "",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{host}}/api/v1/applications",
          "host": ["{{host}}"],
          "path": ["api", "v1", "applications"]
        }
      },
      "response": []
    },
    {
      "name": "application_delete",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "7295bf22-9563-4d52-a953-21645120bb71",
            "exec": [
              "pm.test(\"app delete of test_\" + pm.globals.get(\"timestamp\"), function () {",
              "  pm.expect(pm.response.code).equal(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "x-api-key",
            "value": "{{api_key}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{host}}/api/v1/applications/test_{{timestamp}}",
          "host": ["{{host}}"],
          "path": ["api", "v1", "applications", "test_{{timestamp}}"]
        }
      },
      "response": []
    }
  ],
  "protocolProfileBehavior": {}
}
